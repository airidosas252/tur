diff --git a/dlls/ntdll/unix/signal_x86_64.c b/dlls/ntdll/unix/signal_x86_64.c
index bc6b80152ec..ecc44a74e7f 100644
--- a/dlls/ntdll/unix/signal_x86_64.c
+++ b/dlls/ntdll/unix/signal_x86_64.c
@@ -1942,14 +1942,14 @@ static void install_bpf(struct sigaction *sig_act)
     struct sock_fprog prog;
     NTSTATUS status;
 
-    if ((ULONG_PTR)sc_seccomp < NATIVE_SYSCALL_ADDRESS_START
-            || (ULONG_PTR)syscall < NATIVE_SYSCALL_ADDRESS_START)
-    {
-        ERR_(seh)("Native libs are being loaded in low addresses, sc_seccomp %p, syscall %p, not installing seccomp.\n",
-                sc_seccomp, syscall);
-        ERR_(seh)("The known reasons are /proc/sys/vm/legacy_va_layout set to 1 or 'ulimit -s' being 'unlimited'.\n");
-        return;
-    }
+    //if ((ULONG_PTR)sc_seccomp < NATIVE_SYSCALL_ADDRESS_START
+    //        || (ULONG_PTR)syscall < NATIVE_SYSCALL_ADDRESS_START)
+    //{
+    //    ERR_(seh)("Native libs are being loaded in low addresses, sc_seccomp %p, syscall %p, not installing seccomp.\n",
+    //            sc_seccomp, syscall);
+    //    ERR_(seh)("The known reasons are /proc/sys/vm/legacy_va_layout set to 1 or 'ulimit -s' being 'unlimited'.\n");
+    //    return;
+    //}
 
     sig_act->sa_sigaction = sigsys_handler;
     memset(&prog, 0, sizeof(prog));
@@ -1958,43 +1958,6 @@ static void install_bpf(struct sigaction *sig_act)
 
     frame->syscall_flags = syscall_flags;
 
-
-    test_syscall = mmap((void *)0x600000000000, 0x1000, PROT_EXEC | PROT_READ | PROT_WRITE,
-            MAP_PRIVATE | MAP_ANON, -1, 0);
-    if (test_syscall != (void *)0x600000000000)
-    {
-        int ret;
-
-        ERR("Could not allocate test syscall, falling back to seccomp presence check, test_syscall %p, errno %d.\n",
-                test_syscall, errno);
-        if (test_syscall != MAP_FAILED) munmap(test_syscall, 0x1000);
-
-        if ((ret = prctl(PR_GET_SECCOMP, 0, NULL, 0, 0)))
-        {
-            if (ret == 2)
-                TRACE_(seh)("Seccomp filters already installed.\n");
-            else
-                ERR_(seh)("Seccomp filters cannot be installed, ret %d, error %s.\n", ret, strerror(errno));
-            return;
-        }
-    }
-    else
-    {
-        memcpy(test_syscall, syscall_trap_test, sizeof(syscall_trap_test));
-        status = test_syscall(0xffff);
-        munmap(test_syscall, 0x1000);
-        if (status == STATUS_INVALID_PARAMETER)
-        {
-            TRACE_(seh)("Seccomp filters already installed.\n");
-            return;
-        }
-        if (status != -ENOSYS && (status != -1 || errno != ENOSYS))
-        {
-            ERR_(seh)("Unexpected status %#x, errno %d.\n", status, errno);
-            return;
-        }
-    }
-
     TRACE_(seh)("Installing seccomp filters.\n");
 
     prog.len = ARRAY_SIZE(filter);
